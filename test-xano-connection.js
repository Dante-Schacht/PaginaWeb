// Script para probar la conexi√≥n con Xano usando axios
// Ejecutar en la consola del navegador

import axios from 'axios';

console.log('üß™ Probando conexi√≥n con Xano usando axios...');

// Configuraci√≥n de Xano
const XANO_CONFIG = {
  API_URL: 'https://x8ki-letl-twmt.n7.xano.io/api:SzMZfFwX',
  AUTH_URL: 'https://x8ki-letl-twmt.n7.xano.io/api:QbleTY9C'
};

// Funci√≥n para probar la conexi√≥n
async function testXanoConnection() {
  try {
    console.log('üì° Probando API de productos con axios...');
    
    // Probar endpoint de productos
    const productsResponse = await axios.get(`${XANO_CONFIG.API_URL}/products`);
    console.log('‚úÖ API de productos:', productsResponse.status);
    
    if (productsResponse.status === 200) {
      const products = productsResponse.data;
      console.log('üì¶ Productos encontrados:', products.length || 0);
    }
    
    console.log('üîê Probando API de autenticaci√≥n con axios...');
    
    // Probar endpoint de autenticaci√≥n
    try {
      const authResponse = await axios.post(`${XANO_CONFIG.AUTH_URL}/auth/login`, {
        email: 'test@example.com',
        password: 'test123'
      }, {
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ API de autenticaci√≥n:', authResponse.status);
      const authData = authResponse.data;
      console.log('üîë Respuesta de auth:', authData);
    } catch (authError) {
      console.log('‚úÖ API de autenticaci√≥n:', authError.response?.status || 'Error');
      console.log('‚ö†Ô∏è Error de auth (esperado):', authError.response?.data || authError.message);
    }
    
    console.log('üéâ ¬°Conexi√≥n con Xano exitosa usando axios!');
    
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n:', error.response?.data || error.message);
  }
}

// Ejecutar prueba
testXanoConnection();
